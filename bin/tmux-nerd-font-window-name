#!/usr/bin/env bash

if ! command -v yq >/dev/null 2>&1; then
	echo "$1 ⚠︎ yq missing"
	exit 1
fi

NAME="$1"
PANES="$2"
LARUTA=$3
ruta(){
	if [ "$LARUTA" = "$HOME" ]; then
		echo -n "~"
	else
		echo -n "$(basename $LARUTA)"
	fi
}
FILE=$(ruta)
#FILE="$3"
CURRENT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
DEFAULT_CONFIG="$CURRENT_DIR/defaults.yml"
USER_CONFIG="$HOME/.config/tmux/tmux-nerd-font-window-name.yml"

get_config_value() {
	local key=$1
	local value
	if test -f "$USER_CONFIG"; then
		value="$(yq "$key" "$USER_CONFIG")"
		if [ "$value" == "null" ]; then # get default config value
			value="$(yq "$key" "$DEFAULT_CONFIG")"
		fi
	else
		value="$(yq "$key" "$DEFAULT_CONFIG")"
	fi
	echo "$value"
}

ICON="$(get_config_value ".icons.\"$NAME\"")"

if [ "$ICON" == "null" ]; then
	FALLBACK_ICON="$(get_config_value '.config.fallback-icon')"
	ICON="$FALLBACK_ICON"
fi

if [ "$PANES" -gt 1 ]; then
	MULTI_PANE_ICON="$(get_config_value '.config.multi-pane-icon')"
	if [ "$MULTI_PANE_ICON" != "null" ]; then
		ICON="$MULTI_PANE_ICON $ICON"
	fi
fi

SHOW_NAME="$(get_config_value '.config.show-name')"
if [ "$ICON" ==  "null" ]; then
	SHOW_NAME=true
else
	SHOW_NAME=false
fi
PROBLEMATIC_GLYPHS=""
add_extra_space() {
	local text="$1"
	local problematic_glyphs="$2"
	local modified_text="$text"

  # Loop through each problematic glyph and add a space after it
  for glyph in $(echo "$problematic_glyphs" | grep -o .); do
	  modified_text=$(echo "$modified_text" | sed "s/$glyph/$glyph /g")
  done

  echo "$modified_text"
}
EXTRA_SPACE=$(add_extra_space "$ICON" "$PROBLEMATIC_GLYPHS")
if [ "$SHOW_NAME" = true ]; then
	ICON_POSITION="$(get_config_value '.config.icon-position')"
	if [ "$ICON_POSITION" == "right" ]; then
		ICON="$NAME $ICON"
	else
		ICON="$ICON $NAME"
	fi
fi

echo -e "$EXTRA_SPACE $FILE"
